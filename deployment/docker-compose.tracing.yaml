version: "3.7"

services:
  node_exporter:
    image: prom/node-exporter:latest
    container_name: node_exporter
    ports:
      - "9100:9100"
    restart: unless-stopped

  postgres-exporter:
    image: prometheuscommunity/postgres-exporter
    restart: always
    environment:
      DATA_SOURCE_NAME: "postgresql://postgres:postgres@postgresql-db:5432/postgres?sslmode=disable"
#      PG_EXPORTER_EXTEND_QUERY_PATH: /queries.yaml  # Опционально для расширенных метрик
    ports:
      - "9187:9187"
    

  grafana:
    image: grafana/grafana:latest
    container_name: grafana
    ports:
      - "3000:3000"
    environment:
      - GF_SECURITY_ADMIN_USER=admin
      - GF_SECURITY_ADMIN_PASSWORD=admin
#      - GF_DATABASE_HOST=postgres
    volumes:
      - grafana_data:/var/lib/grafana
      - ./grafana/provisioning:/etc/grafana/provisioning
    depends_on:
      - prometheus
    restart: unless-stopped

  prometheus:
    image: prom/prometheus:latest
    container_name: prometheus
#    volumes:
#      - prometheus/prometheus.yml:/etc/prometheus/prometheus.yml
#      - prometheus_data:/prometheus
    ports:
      - "9090:9090"
#    command:
#      - "--config.file=/etc/prometheus/prometheus.yml"
#      - "--storage.tsdb.path=/prometheus"
    depends_on:
      - node_exporter
      - postgres-exporter
    restart: unless-stopped

  jaeger:
    image: jaegertracing/all-in-one:latest
    container_name: jaeger
    environment:
      - COLLECTOR_ZIPKIN_HOST_PORT=:9411
    ports:
      - "16686:16686"   # Jaeger UI
      - "4318:4318"     # OTLP/gRPC
      - "9411:9411"     # Zipkin

volumes:
  prometheus_data:
  grafana_data:

networks:
  default:
    external: true
    name: ${NETWORK_NAME}